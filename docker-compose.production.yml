# DockWINterface Production Docker Compose with Traefik Integration
version: '3.8'

services:
  dockwinterface:
    build: .
    container_name: DockWINterface
    restart: unless-stopped
    environment:
      - SESSION_SECRET=${SESSION_SECRET:-dev_secret_change_in_production}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FLASK_ENV=production
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./generated_configs:/app/generated_configs
      - /opt/windows:/opt/windows  # Required for Windows version-specific volume mapping
    networks:
      - opt_monitoring  # Required for Traefik integration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      # Traefik configuration for reverse proxy
      - "traefik.enable=true"
      - "traefik.http.routers.dockwinterface.rule=Host(`dockwinterface.rectitude.net`)"
      - "traefik.http.routers.dockwinterface.entrypoints=websecure"
      - "traefik.http.routers.dockwinterface.tls=true"
      - "traefik.http.services.dockwinterface.loadbalancer.server.port=5000"
      - "traefik.http.services.dockwinterface.loadbalancer.server.scheme=http"

  # Optional: Reverse proxy for production (not needed when using external Traefik)
  nginx:
    image: nginx:alpine
    container_name: dockwinterface-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - dockwinterface
    networks:
      - dockwinterface
    profiles:
      - proxy-standalone  # Only enabled when not using Traefik

networks:
  # Use external monitoring network for Traefik integration
  opt_monitoring:
    external: true
  
  # Fallback network for standalone deployment
  dockwinterface:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  generated_configs:
    driver: local
